-- Code generated by MySQL Workbench
-- Edits/Modifications by Chris Siegler

-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Cheep
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Cheep` ;

-- -----------------------------------------------------
-- Schema Cheep
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Cheep` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `Cheep` ;

-- -----------------------------------------------------
-- Table `Cheep`.`ITEM`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cheep`.`ITEM` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(255) NULL,
  `Description` VARCHAR(255) NULL,
  `Category` VARCHAR(45) NULL COMMENT 'Grocery/Electronic/Etc..',
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cheep`.`LOCATION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cheep`.`LOCATION` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(255) NULL,
  `ZIP` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cheep`.`USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cheep`.`USER` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Username` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(45) NOT NULL COMMENT 'Make sure web app says \"Valid Email required\".\nShould also check to see if repeated email.',
  `Date_Joined` DATE NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `Email_UNIQUE` ON `Cheep`.`USER` (`Email` ASC);

CREATE UNIQUE INDEX `Username_UNIQUE` ON `Cheep`.`USER` (`Username` ASC);


-- -----------------------------------------------------
-- Table `Cheep`.`LIST`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cheep`.`LIST` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `USER_ID` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Description` VARCHAR(255) NULL COMMENT 'Allows users to add notes (why am I buying 30 pounds of beef again?)',
  PRIMARY KEY (`ID`, `USER_ID`),
  CONSTRAINT `fk_LIST_USER`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `Cheep`.`USER` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_LIST_USER_idx` ON `Cheep`.`LIST` (`USER_ID` ASC);


-- -----------------------------------------------------
-- Table `Cheep`.`ITEM_LOCATION_PRICE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cheep`.`ITEM_LOCATION_PRICE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ITEM_ID` INT NOT NULL,
  `LOCATION_ID` INT NOT NULL,
  `Price` INT NULL,
  PRIMARY KEY (`ID`, `ITEM_ID`, `LOCATION_ID`),
  CONSTRAINT `fk_ITEM_LOCATION_PRICE_ITEM1`
    FOREIGN KEY (`ITEM_ID`)
    REFERENCES `Cheep`.`ITEM` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ITEM_LOCATION_PRICE_LOCATION1`
    FOREIGN KEY (`LOCATION_ID`)
    REFERENCES `Cheep`.`LOCATION` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_ITEM_LOCATION_PRICE_ITEM1_idx` ON `Cheep`.`ITEM_LOCATION_PRICE` (`ITEM_ID` ASC);

CREATE INDEX `fk_ITEM_LOCATION_PRICE_LOCATION1_idx` ON `Cheep`.`ITEM_LOCATION_PRICE` (`LOCATION_ID` ASC);


-- -----------------------------------------------------
-- Table `Cheep`.`LIST_has_ILP`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cheep`.`LIST_has_ILP` (
  `LIST_ID` INT NOT NULL,
  `ILP_ID` INT NOT NULL,
  PRIMARY KEY (`LIST_ID`, `ILP_ID`),
  CONSTRAINT `fk_LIST_has_ITEM_LOCATION_PRICE_LIST1`
    FOREIGN KEY (`LIST_ID`)
    REFERENCES `Cheep`.`LIST` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_LIST_has_ITEM_LOCATION_PRICE_ITEM_LOCATION_PRICE1`
    FOREIGN KEY (`ILP_ID`)
    REFERENCES `Cheep`.`ITEM_LOCATION_PRICE` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_LIST_has_ITEM_LOCATION_PRICE_ITEM_LOCATION_PRICE1_idx` ON `Cheep`.`LIST_has_ILP` (`ILP_ID` ASC);

CREATE INDEX `fk_LIST_has_ITEM_LOCATION_PRICE_LIST1_idx` ON `Cheep`.`LIST_has_ILP` (`LIST_ID` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;